definitions:
  dto.CategoryResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        $ref: '#/definitions/dto.ImageResponse'
      name:
        type: string
    type: object
  dto.CreateCategoryRequest:
    properties:
      description:
        type: string
      image_id:
        type: integer
      name:
        type: string
    required:
    - description
    - name
    type: object
  dto.CreateProductRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      image_ids:
        items:
          type: integer
        type: array
      name:
        type: string
      variants:
        items:
          $ref: '#/definitions/dto.CreateVariantDTO'
        type: array
    required:
    - category_id
    - name
    - variants
    type: object
  dto.CreateVariantDTO:
    properties:
      price:
        type: integer
      sku:
        type: string
    required:
    - price
    - sku
    type: object
  dto.ImageResponse:
    properties:
      id:
        type: integer
      url:
        type: string
    type: object
  dto.ProductResponseDTO:
    properties:
      category:
        $ref: '#/definitions/dto.CategoryResponse'
      category_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/dto.ImageResponse'
        type: array
      name:
        type: string
      price:
        type: integer
      variants:
        items:
          $ref: '#/definitions/dto.VariantDTO'
        type: array
    type: object
  dto.UpdateProductRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      image_ids:
        items:
          type: integer
        type: array
      name:
        type: string
      variants:
        items:
          $ref: '#/definitions/dto.VariantDTO'
        type: array
    required:
    - category_id
    - id
    - name
    - variants
    type: object
  dto.VariantDTO:
    properties:
      id:
        type: integer
      price:
        type: integer
      sku:
        type: string
    type: object
info:
  contact: {}
paths:
  /categories:
    get:
      description: Get a list of all categories
      responses:
        "200":
          description: Returns a list of categories
          schema:
            additionalProperties: true
            type: object
      summary: Find all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category to create
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the created category
          schema:
            $ref: '#/definitions/dto.CategoryResponse'
      summary: Create a new category
      tags:
      - categories
  /categories/{id}:
    get:
      description: Get a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Returns the category
          schema:
            $ref: '#/definitions/dto.CategoryResponse'
      summary: Find category by ID
      tags:
      - categories
  /images:
    get:
      consumes:
      - application/json
      description: List all images
      produces:
      - application/json
      responses:
        "200":
          description: Returns list of images
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
      summary: List all images
      tags:
      - images
    post:
      consumes:
      - multipart/form-data
      description: Upload an image
      parameters:
      - description: Image file to upload
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Returns success message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload an image
      tags:
      - images
  /images/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an image by ID
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete an image by ID
      tags:
      - images
    get:
      consumes:
      - application/json
      description: Get an image by ID
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns image data
          schema:
            additionalProperties: true
            type: object
      summary: Get an image by ID
      tags:
      - images
  /products:
    get:
      consumes:
      - application/json
      description: Get a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: Returns the list of products
          schema:
            items:
              $ref: '#/definitions/dto.ProductResponseDTO'
            type: array
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the created product
          schema:
            $ref: '#/definitions/dto.ProductResponseDTO'
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns a success message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns the product
          schema:
            $ref: '#/definitions/dto.ProductResponseDTO'
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the updated product
          schema:
            $ref: '#/definitions/dto.ProductResponseDTO'
      summary: Update a product
      tags:
      - products
  /products/category/{category_id}:
    get:
      consumes:
      - application/json
      description: Get a list of products by category ID
      parameters:
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns the list of products in the category
          schema:
            items:
              $ref: '#/definitions/dto.ProductResponseDTO'
            type: array
      summary: Get products by category ID
      tags:
      - products
swagger: "2.0"
